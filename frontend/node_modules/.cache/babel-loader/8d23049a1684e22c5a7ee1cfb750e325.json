{"ast":null,"code":"var _jsxFileName = \"/Users/sachinkarve/Documents/GitHub/Lab1-014153425/frontend/react-frontend/src/components/Cart.js\";\nimport React, { Component } from 'react';\nimport Navbar from './Navbar.js';\nimport { Redirect } from 'react-router';\nimport { Button, Alert, Container, Table, Form, Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport URL from '../config'; //import deleteIcon from \"../../images/delete.jpg\";\n// import axios from 'axios';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getRestaurantDetails = () => {\n      let res_id;\n\n      if (localStorage.getItem(\"cart_res_id\")) {\n        res_id = localStorage.getItem(\"cart_res_id\");\n        axios.defaults.headers.common['authorization'] = localStorage.getItem('token');\n        axios.get(\"\".concat(URL, \"/restaurant/\").concat(res_id)).then(response => {\n          if (response.data) {\n            this.setState({\n              restaurant: response.data\n            });\n          }\n        }).catch(error => {\n          if (error.response && error.response.data) {\n            console.log(error.response.data);\n          }\n        });\n      }\n    };\n\n    this.onQuantityChange = e => {\n      let item_id = parseInt(e.target.name);\n      let newQuantity = parseInt(e.target.value);\n      let cart_items = this.state.cart_items;\n      let index = cart_items.findIndex(cart_item => cart_item.item_id === item_id);\n      cart_items[index].item_quantity = newQuantity;\n      this.setState({\n        cart_items: cart_items\n      });\n      localStorage.setItem(\"cart_items\", JSON.stringify(cart_items));\n    };\n\n    this.removeItem = e => {\n      let item_id = parseInt(e.target.name);\n      let cart_items = this.state.cart_items;\n      let items = [];\n      let index = cart_items.findIndex(cart_item => cart_item.item_id === item_id);\n      cart_items.splice(index, 1);\n      this.setState({\n        cart_items: cart_items\n      });\n      localStorage.setItem(\"cart_items\", JSON.stringify(cart_items));\n    };\n\n    this.calculateSubTotal = () => {\n      let cart_items = this.state.cart_items;\n      let subTotal = 0;\n\n      for (var i = 0; i < cart_items.length; i++) {\n        for (var j = 0; j < cart_items.length; j++) {\n          if (cart_items[i].item_id === cart_items[j].item_id) {\n            subTotal += cart_items[i].item_quantity * cart_items[j].item_price;\n          }\n        }\n      }\n\n      subTotal = subTotal.toFixed(2);\n      return subTotal;\n    };\n\n    this.clearCart = () => {\n      localStorage.removeItem(\"cart_items\");\n      this.setState({\n        cart_items: []\n      });\n    };\n\n    this.state = {\n      cart_items: []\n    };\n    this.clearCart = this.clearCart.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.getRestaurantDetails();\n  }\n\n  componentWillMount() {\n    document.title = \"Cart\";\n    let cartItems = [];\n\n    if (localStorage.getItem(\"cart_items\")) {\n      cartItems.push(...JSON.parse(localStorage.getItem(\"cart_items\")));\n      this.setState({\n        cart_items: cartItems\n      });\n    }\n  }\n\n  render() {\n    let redirectVar = null,\n        itemsRender = [],\n        message = null,\n        resName,\n        resAddress,\n        resZIP,\n        restaurantDetails = null,\n        discountAmount = null,\n        deliveryAmount = null;\n    let discount = 0,\n        delivery = 6,\n        tax = 0;\n\n    if (!localStorage.getItem(\"user_id\") || localStorage.getItem(\"is_owner\") === \"1\") {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      });\n    }\n\n    if (this.state && this.state.restaurant) {\n      resName = this.state.restaurant.res_name;\n      resAddress = this.state.restaurant.address;\n      resZIP = this.state.restaurant.res_zip_code;\n    }\n\n    if (this.state && this.state.cart_items.length === 0) {\n      message = [React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Cart Empty, please add something\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Button, {\n        href: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Home\"))];\n    } else {\n      restaurantDetails = React.createElement(Card, {\n        bg: \"info\",\n        style: {\n          width: \"50rem\",\n          margin: \"2%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        className: \"list-group-flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, resName)), React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, resAddress, \" | \", resZIP)));\n      let cart_items = this.state.cart_items;\n      var subTotal = this.calculateSubTotal(cart_items);\n\n      if (subTotal < 100) {\n        discount = 0;\n      } else {\n        delivery = 0;\n        discountAmount = React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          colSpan: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \"Discounts (\", discount, \"%)\"), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, \"$ \", (subTotal * discount / 100).toFixed(2)));\n      }\n\n      var total = subTotal;\n\n      for (var i = 0; i < cart_items.length; i++) {\n        let quantity = [1, 2, 3, 4, 5];\n        let quantityOptions = quantity.map(number => {\n          if (number === cart_items[i].item_quantity) {\n            return React.createElement(\"option\", {\n              selected: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 163\n              },\n              __self: this\n            }, number);\n          }\n\n          return React.createElement(\"option\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }, number);\n        });\n        let item = React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, cart_items[i].item_name), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \"$ \", cart_items[i].item_price), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          as: \"select\",\n          style: {\n            width: \"30%\"\n          },\n          name: cart_items[i].item_id,\n          onChange: this.onQuantityChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, quantityOptions)), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"link\",\n          name: cart_items[i].item_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \"$ \", cart_items[i].item_price * cart_items[i].item_quantity));\n        itemsRender.push(item);\n      }\n\n      var confirmDetails = {\n        restaurant: this.state.restaurant,\n        subTotal: subTotal,\n        delivery: delivery,\n        discount: discount,\n        tax: tax,\n        total: total,\n        cart_items: this.state.cart_items\n      };\n      var cartTable = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Table, {\n        style: {\n          width: \"90%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Item Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Total Price\")), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, itemsRender, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Total\")), React.createElement(\"td\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"$ \", total))))), React.createElement(Button, {\n        variant: \"warning\",\n        size: \"lg\",\n        onClick: this.clearCart,\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Drop Cart\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: {\n          pathname: \"/order/confirm\",\n          state: confirmDetails\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"success\",\n        size: \"lg\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Checkout\")));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, redirectVar, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Card, {\n      bg: \"light\",\n      style: {\n        width: '55rem',\n        margin: \"8%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Your Cart\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, message, restaurantDetails, cartTable)))));\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"sources":["/Users/sachinkarve/Documents/GitHub/Lab1-014153425/frontend/react-frontend/src/components/Cart.js"],"names":["React","Component","Navbar","Redirect","Button","Alert","Container","Table","Form","Card","ListGroup","ListGroupItem","Link","axios","URL","Cart","constructor","props","getRestaurantDetails","res_id","localStorage","getItem","defaults","headers","common","get","then","response","data","setState","restaurant","catch","error","console","log","onQuantityChange","e","item_id","parseInt","target","name","newQuantity","value","cart_items","state","index","findIndex","cart_item","item_quantity","setItem","JSON","stringify","removeItem","items","splice","calculateSubTotal","subTotal","i","length","j","item_price","toFixed","clearCart","bind","componentWillMount","document","title","cartItems","push","parse","render","redirectVar","itemsRender","message","resName","resAddress","resZIP","restaurantDetails","discountAmount","deliveryAmount","discount","delivery","tax","res_name","address","res_zip_code","width","margin","total","quantity","quantityOptions","map","number","item","item_name","confirmDetails","cartTable","pathname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navbar from './Navbar.js';\nimport { Redirect } from 'react-router';\nimport { Button, Alert, Container, Table, Form, Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport URL from '../config';\n//import deleteIcon from \"../../images/delete.jpg\";\n// import axios from 'axios';\n\n\n\n\n\n\nclass Cart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cart_items: []\n        };\n        this.clearCart = this.clearCart.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n        this.getRestaurantDetails();\n    }\n\n    componentWillMount() {\n        document.title = \"Cart\";\n        let cartItems = [];\n        if (localStorage.getItem(\"cart_items\")) {\n            cartItems.push(...JSON.parse(localStorage.getItem(\"cart_items\")));\n            this.setState({\n                cart_items: cartItems\n            });\n        }\n\n    };\n\n    getRestaurantDetails = () => {\n        let res_id;\n        if (localStorage.getItem(\"cart_res_id\")) {\n            res_id = localStorage.getItem(\"cart_res_id\");\n            axios.defaults.headers.common['authorization']= localStorage.getItem('token') \n            axios.get(`${URL}/restaurant/${res_id}`)\n                .then(response => {\n                    if (response.data) {\n                        this.setState({\n                            restaurant: response.data,\n                        });\n                    }\n                })\n                .catch(error => {\n                    if (error.response && error.response.data) {\n                        console.log(error.response.data);\n                    }\n                })\n        }\n    };\n\n    onQuantityChange = (e) => {\n        let item_id = parseInt(e.target.name);\n        let newQuantity = parseInt(e.target.value);\n        let cart_items = this.state.cart_items;\n        let index = cart_items.findIndex((cart_item => cart_item.item_id === item_id));\n        cart_items[index].item_quantity = newQuantity;\n        this.setState({\n            cart_items: cart_items\n        });\n        localStorage.setItem(\"cart_items\", JSON.stringify(cart_items));\n    };\n\n    removeItem = (e) => {\n        let item_id = parseInt(e.target.name);\n        let cart_items = this.state.cart_items;\n        let items = [];\n        let index = cart_items.findIndex((cart_item => cart_item.item_id === item_id));\n        cart_items.splice(index, 1);\n        this.setState({\n            cart_items: cart_items\n        });\n        localStorage.setItem(\"cart_items\", JSON.stringify(cart_items));\n    }\n\n    calculateSubTotal = () => {\n        let cart_items = this.state.cart_items;\n        let subTotal = 0;\n        for (var i = 0; i < cart_items.length; i++) {\n            for (var j = 0; j < cart_items.length; j++) {\n                if (cart_items[i].item_id === cart_items[j].item_id) {\n                    subTotal += (cart_items[i].item_quantity * cart_items[j].item_price);\n                }\n            }\n        }\n        subTotal = subTotal.toFixed(2);\n\n        return subTotal;\n    };\n\n    clearCart = () => {\n        localStorage.removeItem(\"cart_items\");\n        this.setState({\n            cart_items: []\n        });\n    };\n\n    render() {\n        let redirectVar = null,\n            itemsRender = [],\n            message = null,\n            resName,\n            resAddress,\n            resZIP,\n            restaurantDetails = null,\n            discountAmount = null,\n            deliveryAmount = null;\n\n        let discount = 0,\n            delivery = 6,\n            tax = 0;\n\n        if (!localStorage.getItem(\"user_id\") || localStorage.getItem(\"is_owner\") === \"1\") {\n            redirectVar = <Redirect to=\"/\" />\n        }\n\n        if (this.state && this.state.restaurant) {\n            resName = this.state.restaurant.res_name;\n            resAddress = this.state.restaurant.address;\n            resZIP = this.state.restaurant.res_zip_code;\n        }\n\n        if (this.state && this.state.cart_items.length === 0) {\n            message =\n                [<center><Alert variant=\"warning\">Cart Empty, please add something</Alert><br />\n                    <Button href=\"/home\">Home</Button></center>\n                ]\n        }\n        else {\n            restaurantDetails = (\n                <Card bg=\"info\" style={{ width: \"50rem\", margin: \"2%\" }}>\n                    <ListGroup className=\"list-group-flush\">\n                        <ListGroupItem><h3>{resName}</h3></ListGroupItem>\n                        <ListGroupItem>{resAddress} | {resZIP}</ListGroupItem>\n                    </ListGroup>\n                </Card>\n            );\n            let cart_items = this.state.cart_items;\n            var subTotal = this.calculateSubTotal(cart_items);\n            if (subTotal < 100) {\n                discount = 0;\n            }\n            else {\n                delivery = 0;\n                discountAmount = (<tr>\n                    <td colSpan=\"4\">Discounts ({discount}%)</td>\n                    <td align=\"center\">$ {(subTotal * discount / 100).toFixed(2)}</td>\n                </tr>);\n            }\n            var total = subTotal;\n            for (var i = 0; i < cart_items.length; i++) {\n                let quantity = [1, 2, 3, 4, 5];\n                let quantityOptions = quantity.map(number => {\n                    if (number === cart_items[i].item_quantity) {\n                        return <option selected>{number}</option>;\n                    }\n                    return <option>{number}</option>;\n                });\n                let item = (\n                    <tr>\n                        <td align=\"center\">{cart_items[i].item_name}</td>\n                        <td align=\"center\">$ {cart_items[i].item_price}</td>\n                        <td align=\"center\">\n                            <Form.Control as=\"select\" style={{ width: \"30%\" }} name={cart_items[i].item_id} onChange={this.onQuantityChange}>\n                                {quantityOptions}\n                            </Form.Control>\n                        </td>\n                        <td align=\"center\">\n                            <Button variant=\"link\" name={cart_items[i].item_id}>\n                            </Button>\n                        </td>\n                        <td align=\"center\">$ {cart_items[i].item_price * cart_items[i].item_quantity}</td>\n                    </tr>\n                );\n                itemsRender.push(item);\n            }\n            var confirmDetails = { restaurant: this.state.restaurant, subTotal: subTotal, delivery: delivery, discount: discount, tax: tax, total: total, cart_items: this.state.cart_items };\n            var cartTable = (\n                <div>\n                    <Table style={{ width: \"90%\" }}>\n                        <thead align=\"center\">\n                            <th>Item Name</th>\n                            <th>Price</th>\n                            <th>Quantity</th>\n                            <th></th>\n                            <th>Total Price</th>\n                        </thead>\n                        <tbody>\n                            {itemsRender}\n                            <br /><br /><br /><br />\n                            <tr>\n                                \n                            </tr>\n                            <tr>\n                            </tr>\n                            <tr>\n                                <td colSpan=\"4\"><b>Total</b></td>\n                                <td align=\"center\"><b>$ {total}</b></td>\n                            </tr>\n                        </tbody>\n                    </Table>\n\n                    <Button variant=\"warning\" size=\"lg\" onClick={this.clearCart} block>\n                    Drop Cart\n                    </Button>\n                    <br/>\n                    <Link to={{ pathname: \"/order/confirm\", state: confirmDetails }}>\n\n                    <Button variant=\"success\" size=\"lg\" block>\n                        Checkout\n                    </Button>\n\n                    </Link>\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                {redirectVar}\n                <Navbar /><br />\n\n                <Container>\n\n                    <Card bg=\"light\" style={{ width: '55rem', margin: \"8%\" }}>\n                        <Card.Body>\n                            <Card.Title><h3 align=\"center\">Your Cart</h3><br /></Card.Title>\n                            <Card.Text>\n                                {message}\n                                {restaurantDetails}\n                                {cartTable}\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Container>\n\n            </div>\n        )\n    }\n}\nexport default Cart;"]},"metadata":{},"sourceType":"module"}