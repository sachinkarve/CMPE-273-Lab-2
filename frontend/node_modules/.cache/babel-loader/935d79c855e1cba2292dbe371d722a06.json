{"ast":null,"code":"var _jsxFileName = \"/Users/sachinkarve/Documents/GitHub/Lab1-014153425/frontend/react-frontend/src/components/CustomerPresentOrders.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport Navbar from './Navbar';\nimport axios from 'axios';\nimport { Card, Container, Col, Row, Button, Alert } from \"react-bootstrap\";\nimport { BrowserRouter, Link, NavLink, Route } from \"react-router-dom\";\nimport URL from '../config';\n\nclass CustomerPresentOrders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.cancelOrder = e => {\n      let pending_orders = this.state.pending_orders;\n      let data = {\n        order_id: parseInt(e.target.name)\n      };\n      axios.defaults.headers.common['authorization'] = localStorage.getItem('token');\n      axios.post(\"\".concat(URL, \"/orders/cancelorder\"), data).then(response => {\n        if (response.data === \"ORDER_CANCELLED\") {\n          let index = pending_orders.findIndex(order => order.order_id === data.order_id);\n          pending_orders.splice(index, 1);\n          this.setState({\n            pending_orders: pending_orders,\n            message: response.data\n          });\n        }\n      }).catch(error => {\n        this.setState({\n          message: \"ORDER_ERROR\"\n        });\n      });\n    };\n\n    this.getPendingOrders = () => {\n      axios.defaults.headers.common['authorization'] = localStorage.getItem('token');\n      axios.get(\"\".concat(URL, \"/orders/pendingorders/localStorage.getItem(\\\"user_id\\\")\")).then(response => {\n        if (response.data[0]) {\n          this.setState({\n            pending_orders: response.data\n          });\n        }\n      }).catch(err => {\n        if (err.response && err.response.data) {\n          this.setState({\n            message: err.response.data\n          });\n        }\n      });\n    };\n\n    this.setState({\n      pending_orders: []\n    });\n    this.cancelOrder = this.cancelOrder.bind(this);\n    this.getPendingOrders();\n  }\n\n  componentWillMount() {\n    document.title = \"Your Orders\";\n  }\n\n  render() {\n    let redirectVar = null;\n    let orders = [];\n    let orderCards = null;\n    let message = null;\n\n    if (!localStorage.getItem(\"user_id\") || localStorage.getItem(\"is_owner\") === \"1\") {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }\n\n    if (this.state && this.state.message === \"ORDER_CANCELLED\") {\n      message = React.createElement(Alert, {\n        variant: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Your order is cancelled.\");\n    } else if (this.state && this.state.message === \"ORDER_ERROR\") {\n      message = React.createElement(Alert, {\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Your order could not be cancelled.\");\n    } else if (this.state && this.state.message === \"NO_PENDING_ORDERS\") {\n      message = React.createElement(Link, {\n        to: \"/orders/history\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"You do not have any pending orders. Click here to view your past orders.\"));\n    }\n\n    if (this.state && this.state.pending_orders) {\n      orders = this.state.pending_orders;\n\n      if (orders.length > 0) {\n        orderCards = orders.map(order => {\n          return React.createElement(Card, {\n            bg: \"light\",\n            style: {\n              width: \"60rem\",\n              height: \"8rem\",\n              margin: \"2%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, React.createElement(Card.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, React.createElement(Col, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, React.createElement(Card.Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, order.res_name), React.createElement(Card.Subtitle, {\n            className: \"mb-2 text-muted\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, order.res_address, \" | \", order.res_zip_code), React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: {\n              pathname: \"/orders/details\",\n              state: {\n                order_details: order,\n                prevPath: \"/orders\"\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, React.createElement(Button, {\n            variant: \"link\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, \"Order Details\")))), React.createElement(Col, {\n            align: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, React.createElement(Card.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, order.order_status), React.createElement(Card.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, order.order_date)), React.createElement(Col, {\n            align: \"right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, React.createElement(Button, {\n            variant: \"secondary\",\n            name: order.order_id,\n            onClick: this.cancelOrder,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, \"Cancel Order\"), \"\\xA0\"))));\n        });\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, redirectVar, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"justify-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Your Pending Orders\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), message, orderCards, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Button, {\n      href: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Home\"))));\n  }\n\n}\n\nexport default CustomerPresentOrders;","map":{"version":3,"sources":["/Users/sachinkarve/Documents/GitHub/Lab1-014153425/frontend/react-frontend/src/components/CustomerPresentOrders.js"],"names":["React","Component","Redirect","Navbar","axios","Card","Container","Col","Row","Button","Alert","BrowserRouter","Link","NavLink","Route","URL","CustomerPresentOrders","constructor","props","cancelOrder","e","pending_orders","state","data","order_id","parseInt","target","name","defaults","headers","common","localStorage","getItem","post","then","response","index","findIndex","order","splice","setState","message","catch","error","getPendingOrders","get","err","bind","componentWillMount","document","title","render","redirectVar","orders","orderCards","length","map","width","height","margin","res_name","res_address","res_zip_code","pathname","order_details","prevPath","order_status","order_date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,MAApC,EAA4CC,KAA5C,QAAyD,iBAAzD;AACA,SAASC,aAAT,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwCC,KAAxC,QAAqD,kBAArD;AACA,OAAOC,GAAP,MAAgB,WAAhB;;AACA,MAAMC,qBAAN,SAAoCf,SAApC,CAA8C;AAC1CgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAcnBC,WAdmB,GAcJC,CAAD,IAAO;AACjB,UAAIC,cAAc,GAAG,KAAKC,KAAL,CAAWD,cAAhC;AACA,UAAIE,IAAI,GAAG;AACPC,QAAAA,QAAQ,EAAEC,QAAQ,CAACL,CAAC,CAACM,MAAF,CAASC,IAAV;AADX,OAAX;AAGAvB,MAAAA,KAAK,CAACwB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAgDC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhD;AACA5B,MAAAA,KAAK,CAAC6B,IAAN,WAAclB,GAAd,0BAAwCQ,IAAxC,EACKW,IADL,CACUC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACZ,IAAT,KAAkB,iBAAtB,EAAyC;AACrC,cAAIa,KAAK,GAAGf,cAAc,CAACgB,SAAf,CAAyBC,KAAK,IAAIA,KAAK,CAACd,QAAN,KAAmBD,IAAI,CAACC,QAA1D,CAAZ;AACAH,UAAAA,cAAc,CAACkB,MAAf,CAAsBH,KAAtB,EAA6B,CAA7B;AACA,eAAKI,QAAL,CAAc;AACVnB,YAAAA,cAAc,EAAEA,cADN;AAEVoB,YAAAA,OAAO,EAAEN,QAAQ,CAACZ;AAFR,WAAd;AAIH;AACJ,OAVL,EAWKmB,KAXL,CAWWC,KAAK,IAAI;AACZ,aAAKH,QAAL,CAAc;AACVC,UAAAA,OAAO,EAAE;AADC,SAAd;AAGH,OAfL;AAgBH,KApCkB;;AAAA,SAsCnBG,gBAtCmB,GAsCA,MAAM;AACrBxC,MAAAA,KAAK,CAACwB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAgDC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhD;AAEA5B,MAAAA,KAAK,CAACyC,GAAN,WAAa9B,GAAb,8DACKmB,IADL,CACUC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACZ,IAAT,CAAc,CAAd,CAAJ,EAAsB;AAClB,eAAKiB,QAAL,CAAc;AACVnB,YAAAA,cAAc,EAAEc,QAAQ,CAACZ;AADf,WAAd;AAGH;AACJ,OAPL,EAQKmB,KARL,CAQWI,GAAG,IAAI;AACV,YAAIA,GAAG,CAACX,QAAJ,IAAgBW,GAAG,CAACX,QAAJ,CAAaZ,IAAjC,EAAuC;AACnC,eAAKiB,QAAL,CAAc;AACVC,YAAAA,OAAO,EAAEK,GAAG,CAACX,QAAJ,CAAaZ;AADZ,WAAd;AAGH;AACJ,OAdL;AAeH,KAxDkB;;AAEf,SAAKiB,QAAL,CAAc;AACVnB,MAAAA,cAAc,EAAE;AADN,KAAd;AAIA,SAAKF,WAAL,GAAmB,KAAKA,WAAL,CAAiB4B,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKH,gBAAL;AACH;;AAEDI,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,QAAQ,CAACC,KAAT,GAAiB,aAAjB;AACH;;AA8CDC,EAAAA,MAAM,GAAG;AACL,QAAIC,WAAW,GAAG,IAAlB;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,UAAU,GAAG,IAAjB;AACA,QAAIb,OAAO,GAAG,IAAd;;AACA,QAAI,CAACV,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAD,IAAoCD,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,GAA7E,EAAkF;AAC9EoB,MAAAA,WAAW,GAAG,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACH;;AACD,QAAI,KAAK9B,KAAL,IAAc,KAAKA,KAAL,CAAWmB,OAAX,KAAuB,iBAAzC,EAA4D;AACxDA,MAAAA,OAAO,GAAG,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAV;AACH,KAFD,MAGK,IAAI,KAAKnB,KAAL,IAAc,KAAKA,KAAL,CAAWmB,OAAX,KAAuB,aAAzC,EAAwD;AACzDA,MAAAA,OAAO,GAAG,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAV;AACH,KAFI,MAGA,IAAI,KAAKnB,KAAL,IAAc,KAAKA,KAAL,CAAWmB,OAAX,KAAuB,mBAAzC,EAA8D;AAC/DA,MAAAA,OAAO,GACH,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFADJ,CADJ;AAKH;;AACD,QAAI,KAAKnB,KAAL,IAAc,KAAKA,KAAL,CAAWD,cAA7B,EAA6C;AACzCgC,MAAAA,MAAM,GAAG,KAAK/B,KAAL,CAAWD,cAApB;;AACA,UAAIgC,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;AACnBD,QAAAA,UAAU,GAAGD,MAAM,CAACG,GAAP,CAAWlB,KAAK,IAAI;AAC7B,iBACI,oBAAC,IAAD;AAAM,YAAA,EAAE,EAAC,OAAT;AAAiB,YAAA,KAAK,EAAE;AAAEmB,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,MAAM,EAAE,MAA1B;AAAkCC,cAAAA,MAAM,EAAE;AAA1C,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAarB,KAAK,CAACsB,QAAnB,CADJ,EAEI,oBAAC,IAAD,CAAM,QAAN;AAAe,YAAA,SAAS,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4CtB,KAAK,CAACuB,WAAlD,SAAkEvB,KAAK,CAACwB,YAAxE,CAFJ,EAGI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,IAAD;AAAM,YAAA,EAAE,EAAE;AAAEC,cAAAA,QAAQ,EAAE,iBAAZ;AAA+BzC,cAAAA,KAAK,EAAE;AAAC0C,gBAAAA,aAAa,EAAE1B,KAAhB;AAAuB2B,gBAAAA,QAAQ,EAAE;AAAjC;AAAtC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ,CAHJ,CADJ,EAUI,oBAAC,GAAD;AAAK,YAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAY3B,KAAK,CAAC4B,YAAlB,CADJ,EAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAY5B,KAAK,CAAC6B,UAAlB,CAFJ,CAVJ,EAcI,oBAAC,GAAD;AAAK,YAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,IAAI,EAAE7B,KAAK,CAACd,QAAxC;AAAkD,YAAA,OAAO,EAAE,KAAKL,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,SAdJ,CADJ,CADJ,CADJ;AAwBH,SAzBY,CAAb;AA0BH;AACJ;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKiC,WADL,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAEc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFd,EAGI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhC,EAEKX,OAFL,EAGKa,UAHL,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAJJ,CAHJ,CADJ;AAcH;;AA7HyC;;AAgI9C,eAAetC,qBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport Navbar from './Navbar';\nimport axios from 'axios';\nimport { Card, Container, Col, Row, Button, Alert } from \"react-bootstrap\";\nimport { BrowserRouter , Link, NavLink, Route } from \"react-router-dom\";\nimport URL from '../config'\nclass CustomerPresentOrders extends Component {\n    constructor(props) {\n        super(props);\n        this.setState({\n            pending_orders: []\n        });\n\n        this.cancelOrder = this.cancelOrder.bind(this);\n        this.getPendingOrders();\n    }\n\n    componentWillMount() {\n        document.title = \"Your Orders\";\n    }\n\n    cancelOrder = (e) => {\n        let pending_orders = this.state.pending_orders;\n        let data = {\n            order_id: parseInt(e.target.name)\n        };\n        axios.defaults.headers.common['authorization']= localStorage.getItem('token')\n        axios.post(`${URL}/orders/cancelorder`, data)\n            .then(response => {\n                if (response.data === \"ORDER_CANCELLED\") {\n                    let index = pending_orders.findIndex(order => order.order_id === data.order_id);\n                    pending_orders.splice(index, 1);\n                    this.setState({\n                        pending_orders: pending_orders,\n                        message: response.data\n                    });\n                }\n            })\n            .catch(error => {\n                this.setState({\n                    message: \"ORDER_ERROR\"\n                });\n            });\n    };\n\n    getPendingOrders = () => {\n        axios.defaults.headers.common['authorization']= localStorage.getItem('token') \n\n        axios.get(`${URL}/orders/pendingorders/localStorage.getItem(\"user_id\")`)\n            .then(response => {\n                if (response.data[0]) {\n                    this.setState({\n                        pending_orders: response.data\n                    });\n                }\n            })\n            .catch(err => {\n                if (err.response && err.response.data) {\n                    this.setState({\n                        message: err.response.data\n                    });\n                }\n            });\n    };\n\n    render() {\n        let redirectVar = null;\n        let orders = [];\n        let orderCards = null;\n        let message = null;\n        if (!localStorage.getItem(\"user_id\") || localStorage.getItem(\"is_owner\") === \"1\") {\n            redirectVar = <Redirect to=\"/\" />\n        }\n        if (this.state && this.state.message === \"ORDER_CANCELLED\") {\n            message = <Alert variant=\"success\">Your order is cancelled.</Alert>\n        }\n        else if (this.state && this.state.message === \"ORDER_ERROR\") {\n            message = <Alert variant=\"warning\">Your order could not be cancelled.</Alert>\n        }\n        else if (this.state && this.state.message === \"NO_PENDING_ORDERS\") {\n            message = (\n                <Link to=\"/orders/history\">\n                    <Alert variant=\"warning\">You do not have any pending orders. Click here to view your past orders.</Alert>\n                </Link>\n            );\n        }\n        if (this.state && this.state.pending_orders) {\n            orders = this.state.pending_orders;\n            if (orders.length > 0) {\n                orderCards = orders.map(order => {\n                    return (\n                        <Card bg=\"light\" style={{ width: \"60rem\", height: \"8rem\", margin: \"2%\" }}>\n                            <Card.Body>\n                                <Row>\n                                    <Col>\n                                        <Card.Title>{order.res_name}</Card.Title>\n                                        <Card.Subtitle className=\"mb-2 text-muted\">{order.res_address} | {order.res_zip_code}</Card.Subtitle>\n                                        <Row>\n                                            <Link to={{ pathname: \"/orders/details\", state: {order_details: order, prevPath: \"/orders\"} }}>\n                                                <Button variant=\"link\">Order Details</Button>\n                                            </Link>\n                                        </Row>\n                                    </Col>\n                                    <Col align=\"center\">\n                                        <Card.Text>{order.order_status}</Card.Text>\n                                        <Card.Text>{order.order_date}</Card.Text>\n                                    </Col>\n                                    <Col align=\"right\">\n                                        <Button variant=\"secondary\" name={order.order_id} onClick={this.cancelOrder}>Cancel Order</Button>&nbsp;\n                                </Col>\n                                </Row>\n                            </Card.Body>\n                        </Card>\n                    );\n                });\n            }\n        }\n        return (\n            <div>\n                {redirectVar}\n                <Navbar /><br />\n                <Container className=\"justify-content\">\n                    <h3>Your Pending Orders</h3><br />\n                    {message}\n                    {orderCards}\n                    <center>\n                        <Button href=\"/home\">Home</Button>\n                    </center>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default CustomerPresentOrders;"]},"metadata":{},"sourceType":"module"}