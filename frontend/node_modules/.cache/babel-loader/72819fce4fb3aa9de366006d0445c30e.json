{"ast":null,"code":"var _jsxFileName = \"/Users/sachinkarve/Documents/GitHub/Lab1-014153425/frontend/react-frontend/src/components/ItemCard.js\";\n//import URL from '../config'\nimport React, { Component } from \"react\";\nimport { Card, Button, Col, Row } from \"react-bootstrap\";\nimport imageSrc from '../images/item_placeholder.jpg';\n\nclass ItemCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addToCart = e => {\n      let item_id = this.props.menu_item.item_id;\n      let cartItems = []; //let cartItemIds = [];\n\n      if (parseInt(localStorage.getItem(\"cart_res_id\")) !== this.props.menu_item.res_id) {\n        localStorage.setItem(\"cart_items\", cartItems);\n      }\n\n      if (localStorage.getItem(\"cart_items\")) {\n        cartItems.push(...JSON.parse(localStorage.getItem(\"cart_items\")));\n      }\n\n      let index = cartItems.findIndex(cartItem => cartItem.item_id === item_id);\n\n      if (index === -1) {\n        e.target.textContent = \"Remove from Cart\";\n        e.target.className = \"btn btn-warning\";\n        cartItems.push({\n          item_id: item_id,\n          item_quantity: 1,\n          item_price: this.props.menu_item.item_price,\n          item_name: this.props.menu_item.item_name\n        });\n        localStorage.setItem(\"cart_res_id\", this.props.menu_item.res_id);\n        localStorage.setItem(\"cart_items\", JSON.stringify(cartItems));\n      } else {\n        e.target.textContent = \"Add to Cart\";\n        e.target.className = \"btn btn-primary\";\n        cartItems.splice(index, 1);\n        localStorage.setItem(\"cart_items\", JSON.stringify(cartItems));\n      }\n    };\n\n    this.addToCart = this.addToCart.bind(this);\n  }\n\n  render() {\n    // let imageSrc = `${URL}/images/item/${this.props.menu_item.item_image}`;\n    let buttonText = \"Add to Cart\";\n    let buttonVariant = \"primary\";\n    let cartItems = [];\n    let cartItemIds = [];\n\n    if (localStorage.getItem(\"cart_items\")) {\n      cartItems.push(...JSON.parse(localStorage.getItem(\"cart_items\")));\n      cartItemIds = cartItems.map(cartItem => cartItem.item_id);\n      buttonText = cartItemIds.includes(this.props.menu_item.item_id) ? \"Drop from Cart\" : buttonText;\n      buttonVariant = cartItemIds.includes(this.props.menu_item.item_id) ? \"danger\" : buttonVariant;\n    }\n\n    return React.createElement(Card, {\n      bg: \"white\",\n      style: {\n        width: \"50rem\",\n        height: \"8rem\",\n        margin: \"2%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      style: {\n        width: \"12rem\",\n        height: \"8rem\"\n      },\n      src: imageSrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.props.menu_item.item_name), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.props.menu_item.item_description), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Price: $ \", this.props.menu_item.item_price)), React.createElement(Col, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: buttonVariant,\n      onClick: this.addToCart,\n      name: this.props.menu_item.item_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, buttonText), \"\\xA0 \\xA0\")));\n  }\n\n}\n\nexport default ItemCard;","map":{"version":3,"sources":["/Users/sachinkarve/Documents/GitHub/Lab1-014153425/frontend/react-frontend/src/components/ItemCard.js"],"names":["React","Component","Card","Button","Col","Row","imageSrc","ItemCard","constructor","props","addToCart","e","item_id","menu_item","cartItems","parseInt","localStorage","getItem","res_id","setItem","push","JSON","parse","index","findIndex","cartItem","target","textContent","className","item_quantity","item_price","item_name","stringify","splice","bind","render","buttonText","buttonVariant","cartItemIds","map","includes","width","height","margin","item_description"],"mappings":"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","sourcesContent":["//import URL from '../config'\n\nimport React, { Component } from \"react\";\nimport { Card,Button, Col, Row } from \"react-bootstrap\";\nimport imageSrc from '../images/item_placeholder.jpg'\nclass ItemCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addToCart = this.addToCart.bind(this);\n  }\n\n  addToCart = (e) => {\n    let item_id = this.props.menu_item.item_id;\n    let cartItems = [];\n    //let cartItemIds = [];\n\n    if (parseInt(localStorage.getItem(\"cart_res_id\")) !== this.props.menu_item.res_id) {\n      localStorage.setItem(\"cart_items\", cartItems);\n    }\n\n    if (localStorage.getItem(\"cart_items\")) {\n      cartItems.push(...JSON.parse(localStorage.getItem(\"cart_items\")));\n    }\n\n    let index = cartItems.findIndex((cartItem => cartItem.item_id === item_id));\n    if (index === -1) {\n      e.target.textContent = \"Remove from Cart\";\n      e.target.className = \"btn btn-warning\";\n      cartItems.push({ item_id: item_id, item_quantity: 1, item_price: this.props.menu_item.item_price, item_name: this.props.menu_item.item_name });\n      localStorage.setItem(\"cart_res_id\", this.props.menu_item.res_id);\n      localStorage.setItem(\"cart_items\", JSON.stringify(cartItems));\n    }\n    else {\n      e.target.textContent = \"Add to Cart\";\n      e.target.className = \"btn btn-primary\";\n      cartItems.splice(index, 1);\n      localStorage.setItem(\"cart_items\", JSON.stringify(cartItems));\n    }\n  };\n\n\n  render() {\n    // let imageSrc = `${URL}/images/item/${this.props.menu_item.item_image}`;\n\n    let buttonText = \"Add to Cart\";\n    let buttonVariant = \"primary\";\n    let cartItems = [];\n    let cartItemIds = [];\n    if (localStorage.getItem(\"cart_items\")) {\n      cartItems.push(...JSON.parse(localStorage.getItem(\"cart_items\")));\n      cartItemIds = cartItems.map(cartItem => cartItem.item_id);\n      buttonText = cartItemIds.includes(this.props.menu_item.item_id) ? \"Drop from Cart\" : buttonText;\n      buttonVariant = cartItemIds.includes(this.props.menu_item.item_id) ? \"danger\" : buttonVariant;\n    }\n\n    return (\n      <Card bg=\"white\" style={{ width: \"50rem\", height: \"8rem\", margin: \"2%\" }}>\n        <Row>\n          <Col>\n            <Card.Img style={{ width: \"12rem\", height: \"8rem\" }} src={imageSrc} />\n          </Col>\n          <Card.Body>\n            <Card.Title>{this.props.menu_item.item_name}</Card.Title>\n            <Card.Text>{this.props.menu_item.item_description}</Card.Text>\n            <Card.Text>Price: $ {this.props.menu_item.item_price}</Card.Text>\n          </Card.Body>\n          <Col align=\"right\">\n            <br /><br />\n            <Button variant={buttonVariant} onClick={this.addToCart} name={this.props.menu_item.item_id}>{buttonText}</Button>&nbsp; &nbsp;\n            </Col>\n        </Row>\n      </Card>\n    );\n  }\n}\n\nexport default ItemCard;"]},"metadata":{},"sourceType":"module"}