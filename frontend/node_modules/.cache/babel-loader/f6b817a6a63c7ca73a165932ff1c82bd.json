{"ast":null,"code":"var _jsxFileName = \"/Users/sachinkarve/Documents/GitHub/Lab1-014153425/frontend/react-frontend/src/components/Sections.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar.js';\nimport URL from '../config';\nimport { Row, Alert, Card, Container, Button, Col } from 'react-bootstrap';\n\nclass Sections extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onEditGet = e => {\n      console.log(\"inside onEditSubmit\");\n      e.preventDefault();\n      axios.defaults.withCredentials = true;\n      axios.defaults.headers.common['authorization'] = localStorage.getItem('token');\n      axios.get(\"\".concat(URL, \"/section/editsection/\").concat(this.state.editSectionName)).then(response => {\n        console.log(response);\n        this.setState({\n          dynamic_menu_section_name: response.data.menu_section_name,\n          dynamic_menu_section_id: response.data.menu_section_id,\n          updateFlag: true,\n          editGetStatus: \"SUCCESS\"\n        });\n      }).catch(err => {\n        console.log(\"error occured:: \".concat(err));\n        this.setState({\n          editGetStatus: \"NO_ITEM_FOUND\"\n        });\n      });\n    };\n\n    this.onUpdateSubmit = e => {\n      console.log(\"inside onUpdateSubmit\");\n      e.preventDefault();\n      axios.defaults.withCredentials = true;\n      const data = {\n        dynamic_menu_section_name: this.state.dynamic_menu_section_name,\n        dynamic_menu_section_id: this.state.dynamic_menu_section_id\n      };\n      axios.defaults.headers.common['authorization'] = localStorage.getItem('token');\n      axios.post(\"\".concat(URL, \"/section/editsection\"), data).then(response => {\n        console.log(response);\n        this.setState({\n          updatePostStatus: \"UPDATE_SUCCESSFUL\"\n        });\n      }).catch(err => {\n        console.log(\"error occured:: \".concat(err));\n        this.setState({\n          updatePostStatus: \"FAILED\"\n        });\n      });\n    };\n\n    this.onChangeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onChangeHandlerForEdit = e => {\n      this.setState({\n        [e.target.name]: e.target.value,\n        updateFlag: null\n      });\n    };\n\n    this.onAddSubmit = e => {\n      //prevent page from refresh\n      console.log(\"inside add Sections ka submit\");\n      e.preventDefault();\n      const data = {\n        sectionName: this.state.addSectionName,\n        user_id: this.state.user_id\n      };\n      axios.defaults.withCredentials = true;\n      axios.defaults.headers.common['authorization'] = localStorage.getItem('token');\n      axios.post(\"\".concat(URL, \"/section/addsection\"), data).then(response => {\n        console.log(\"Response String : \", response.data[0].status);\n\n        if (response.data[0].status === \"SECTION_ADDED\") {\n          this.setState({\n            addResponseMsg: \"SECTION_ADDED\"\n          });\n        } else if (response.data[0].status === \"SECTION_EXISTS\") {\n          this.setState({\n            addResponseMsg: \"SECTION_EXISTS\"\n          });\n        }\n      }).catch(err => {\n        console.log(\"Response String : \", err);\n\n        if (err.status === \"SECTION_ADDITION_FAILED\") {\n          this.setState({\n            addResponseMsg: \"SECTION_ADDITION_FAILED\"\n          });\n        }\n      });\n    };\n\n    this.onDeleteSubmit = e => {\n      //prevent page from refresh\n      console.log(\"inside delete Sections ka submit\");\n      e.preventDefault();\n      const data = {\n        menu_section_name: this.state.deleteSectionName\n      };\n      axios.defaults.withCredentials = true;\n      axios.defaults.headers.common['authorization'] = localStorage.getItem('token');\n      axios.post(\"\".concat(URL, \"/section/deletesection\"), data).then(response => {\n        console.log(\"Response String : \", response.data[0].status);\n\n        if (response.data[0].status === \"SECTION_DELETED_SUCCESSFULLY\") {\n          this.setState({\n            deleteResponseMsg: \"SECTION_DELETED_SUCCESSFULLY\"\n          });\n        } else if (response.data[0].status === \"SECTION_DOES_NOT_EXIST\") {\n          this.setState({\n            deleteResponseMsg: \"SECTION_DOES_NOT_EXIST\"\n          });\n        }\n      }).catch(err => {\n        console.log(\"Response String : \", err);\n        this.setState({\n          deleteResponseMsg: \"DELETION_FAILED\"\n        });\n      });\n    };\n\n    this.state = {\n      addSectionName: null,\n      user_id: localStorage.getItem(\"user_id\"),\n      deleteSectionName: \"\",\n      addResponseMsg: \"\",\n      deleteResponseMsg: \"\",\n      editSectionName: \"\",\n      editGetStatus: \"\",\n      updatePostStatus: \"\",\n      dynamic_menu_section_name: \"\",\n      dynamic_menu_section_id: \"\",\n      updateFlag: null\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onAddSubmit = this.onAddSubmit.bind(this);\n    this.onDeleteSubmit = this.onDeleteSubmit.bind(this);\n    this.onEditGet = this.onEditGet.bind(this);\n  }\n\n  render() {\n    let popupMsg = null;\n    let editGetpopupMsg = null;\n    let updateComponent = null;\n    let updateStatuspopupMsg = null;\n\n    switch (this.state.addResponseMsg) {\n      case \"SECTION_ADDED\":\n        popupMsg = React.createElement(Alert, {\n          variant: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, \"Section Added Successfully!!\");\n        break;\n\n      case \"SECTION_EXISTS\":\n        popupMsg = React.createElement(Alert, {\n          variant: \"warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \"Section Exists!!\");\n        break;\n\n      case \"SECTION_ADDITION_FAILED\":\n        popupMsg = React.createElement(Alert, {\n          variant: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"Addition Failed!!\");\n        break;\n\n      default:\n        popupMsg = null;\n    }\n\n    switch (this.state.editGetStatus) {\n      case \"SUCCESS\":\n        editGetpopupMsg = React.createElement(Alert, {\n          variant: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \"Updation enabled!!\");\n        break;\n\n      case \"NO_ITEM_FOUND\":\n        editGetpopupMsg = React.createElement(Alert, {\n          variant: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \"Section Doesn't Exist!!\");\n        break;\n\n      default:\n        editGetpopupMsg = null;\n    }\n\n    switch (this.state.updatePostStatus) {\n      case \"UPDATE_SUCCESSFUL\":\n        updateStatuspopupMsg = React.createElement(Alert, {\n          variant: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, \"Updation Successful!!\");\n        break;\n\n      case \"FAILED\":\n        updateStatuspopupMsg = React.createElement(Alert, {\n          variant: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, \"Updation Failed!!\");\n        break;\n\n      default:\n        updateStatuspopupMsg = null;\n    }\n\n    let deletePopupMsg = null;\n\n    switch (this.state.deleteResponseMsg) {\n      case \"SECTION_DELETED_SUCCESSFULLY\":\n        deletePopupMsg = React.createElement(Alert, {\n          variant: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, \"Section Deleted Successfully!!\");\n        break;\n\n      case \"DELETION_FAILED\":\n        deletePopupMsg = React.createElement(Alert, {\n          variant: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"Deletion failed!!\");\n        break;\n\n      case \"SECTION_DOES_NOT_EXIST\":\n        deletePopupMsg = React.createElement(Alert, {\n          variant: \"warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, \"Section doesn't Exist!!\");\n        break;\n\n      default:\n        deletePopupMsg = null;\n    }\n\n    let redirectvar = null;\n\n    if (!localStorage.getItem('token')) {\n      redirectvar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.updateFlag) {\n      updateComponent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: '24rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Update Section\"), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onUpdateSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"exampleInputEmail1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Section name\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        onChange: this.onChangeHandler,\n        name: \"dynamic_menu_section_name\",\n        required: true,\n        placeholder: \"Add new Sections here..\",\n        defaultValue: this.state.dynamic_menu_section_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })), updateStatuspopupMsg, React.createElement(\"button\", {\n        type: \"submit\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Update\"))))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, redirectvar, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/updatemenu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Update Menu\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '24rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Add Section\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onAddSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Section name\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      onChange: this.onChangeHandler,\n      name: \"addSectionName\",\n      required: true,\n      placeholder: \"Add new Sections here..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })), popupMsg, React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Add\")))))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '24rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Update Search\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onEditGet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Section name\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      onChange: this.onChangeHandlerForEdit,\n      name: \"editSectionName\",\n      required: true,\n      placeholder: \"Edit Sections here..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    })), editGetpopupMsg, React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Edit\")))))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '24rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Delete Section\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onDeleteSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Section name\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"deleteSectionName\",\n      onChange: this.onChangeHandler,\n      required: true,\n      placeholder: \"Sections to be deleted..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    })), deletePopupMsg, React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Delete\"))))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, updateComponent), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Sections;","map":{"version":3,"sources":["/Users/sachinkarve/Documents/GitHub/Lab1-014153425/frontend/react-frontend/src/components/Sections.js"],"names":["React","Component","axios","cookie","Redirect","Link","Navbar","URL","Row","Alert","Card","Container","Button","Col","Sections","constructor","props","onEditGet","e","console","log","preventDefault","defaults","withCredentials","headers","common","localStorage","getItem","get","state","editSectionName","then","response","setState","dynamic_menu_section_name","data","menu_section_name","dynamic_menu_section_id","menu_section_id","updateFlag","editGetStatus","catch","err","onUpdateSubmit","post","updatePostStatus","onChangeHandler","target","name","value","onChangeHandlerForEdit","onAddSubmit","sectionName","addSectionName","user_id","status","addResponseMsg","onDeleteSubmit","deleteSectionName","deleteResponseMsg","bind","render","popupMsg","editGetpopupMsg","updateComponent","updateStatuspopupMsg","deletePopupMsg","redirectvar","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom'\nimport Navbar from './Navbar.js'\nimport URL from '../config'\n\nimport { Row, Alert, Card, Container, Button, Col } from 'react-bootstrap';\n\nclass Sections extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addSectionName: null,\n            user_id: localStorage.getItem(\"user_id\"),\n            deleteSectionName: \"\",\n            addResponseMsg: \"\",\n            deleteResponseMsg: \"\",\n            editSectionName: \"\",\n            editGetStatus: \"\",\n            updatePostStatus : \"\",\n            dynamic_menu_section_name: \"\",\n            dynamic_menu_section_id: \"\",\n            updateFlag: null\n        }\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.onAddSubmit = this.onAddSubmit.bind(this);\n        this.onDeleteSubmit = this.onDeleteSubmit.bind(this);\n        this.onEditGet = this.onEditGet.bind(this);\n    }\n\n    onEditGet = (e) => {\n        console.log(`inside onEditSubmit`);\n        e.preventDefault();\n\n        axios.defaults.withCredentials = true;\n        axios.defaults.headers.common['authorization']= localStorage.getItem('token')\n        axios.get(`${URL}/section/editsection/${this.state.editSectionName}`)\n            .then(response => {\n                console.log(response);\n                this.setState({\n                    dynamic_menu_section_name: response.data.menu_section_name,\n                    dynamic_menu_section_id: response.data.menu_section_id,\n                    updateFlag: true,\n                    editGetStatus: \"SUCCESS\"\n                })\n\n            })\n            .catch(err => {\n                console.log(`error occured:: ${err}`);\n                this.setState({\n                    editGetStatus: \"NO_ITEM_FOUND\"\n                })\n            });\n    }\n\n\n    onUpdateSubmit = (e) => {\n        console.log(`inside onUpdateSubmit`);\n        e.preventDefault();\n        axios.defaults.withCredentials = true;\n        const data = {\n            dynamic_menu_section_name: this.state.dynamic_menu_section_name,\n            dynamic_menu_section_id: this.state.dynamic_menu_section_id\n        }\n        axios.defaults.headers.common['authorization']= localStorage.getItem('token')\n        axios.post(`${URL}/section/editsection`, data)\n            .then(response => {\n                console.log(response);\n                this.setState({\n                    updatePostStatus : \"UPDATE_SUCCESSFUL\"\n                })\n            })\n            .catch(err => {\n                console.log(`error occured:: ${err}`);\n                this.setState({\n                    updatePostStatus : \"FAILED\"\n                })\n            });\n    }\n\n\n\n    onChangeHandler = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n\n    onChangeHandlerForEdit = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n            updateFlag: null\n        });\n\n    }\n\n\n    onAddSubmit = (e) => {\n        //prevent page from refresh\n        console.log(`inside add Sections ka submit`)\n        e.preventDefault();\n        const data = {\n            sectionName: this.state.addSectionName,\n            user_id: this.state.user_id\n        }\n        axios.defaults.withCredentials = true;\n        axios.defaults.headers.common['authorization']= localStorage.getItem('token')\n        axios.post(`${URL}/section/addsection`, data)\n            .then(response => {\n                console.log(\"Response String : \", response.data[0].status);\n                if (response.data[0].status === \"SECTION_ADDED\") {\n                    this.setState({\n                        addResponseMsg: \"SECTION_ADDED\"\n                    })\n                } else if (response.data[0].status === \"SECTION_EXISTS\") {\n                    this.setState({\n                        addResponseMsg: \"SECTION_EXISTS\"\n                    })\n                }\n            }).catch(err => {\n                console.log(\"Response String : \", err);\n                if (err.status === \"SECTION_ADDITION_FAILED\") {\n                    this.setState({\n                        addResponseMsg: \"SECTION_ADDITION_FAILED\"\n                    })\n                }\n            });\n    }\n\n\n    onDeleteSubmit = (e) => {\n        //prevent page from refresh\n        console.log(`inside delete Sections ka submit`)\n        e.preventDefault();\n        const data = {\n            menu_section_name: this.state.deleteSectionName\n        }\n        axios.defaults.withCredentials = true;\n        axios.defaults.headers.common['authorization']= localStorage.getItem('token')\n        axios.post(`${URL}/section/deletesection`, data)\n            .then(response => {\n                console.log(\"Response String : \", response.data[0].status);\n                if (response.data[0].status === \"SECTION_DELETED_SUCCESSFULLY\") {\n                    this.setState({\n                        deleteResponseMsg: \"SECTION_DELETED_SUCCESSFULLY\"\n                    })\n                }\n                else if (response.data[0].status === \"SECTION_DOES_NOT_EXIST\") {\n                    this.setState({\n                        deleteResponseMsg: \"SECTION_DOES_NOT_EXIST\"\n                    })\n                }\n            }).catch(err => {\n                console.log(\"Response String : \", err);\n                this.setState({\n                    deleteResponseMsg: \"DELETION_FAILED\"\n                })\n            });\n    }\n\n\n    render() {\n        let popupMsg = null;\n        let editGetpopupMsg = null;\n        let updateComponent = null;\n        let updateStatuspopupMsg = null;\n        switch (this.state.addResponseMsg) {\n            case \"SECTION_ADDED\":\n                popupMsg = (<Alert variant=\"success\">Section Added Successfully!!</Alert>)\n                break;\n            case \"SECTION_EXISTS\":\n                popupMsg = (<Alert variant=\"warning\">Section Exists!!</Alert>)\n                break;\n            case \"SECTION_ADDITION_FAILED\":\n                popupMsg = (<Alert variant=\"danger\">Addition Failed!!</Alert>)\n                break;\n            default:\n                popupMsg = null;\n        }\n\n        switch (this.state.editGetStatus) {\n            case \"SUCCESS\":\n                editGetpopupMsg = (<Alert variant=\"success\">Updation enabled!!</Alert>)\n                break;\n            case \"NO_ITEM_FOUND\":\n                editGetpopupMsg = (<Alert variant=\"danger\">Section Doesn't Exist!!</Alert>)\n                break;\n            default:\n                editGetpopupMsg = null;\n        }\n\n        switch (this.state.updatePostStatus) {\n            case \"UPDATE_SUCCESSFUL\":\n                updateStatuspopupMsg = (<Alert variant=\"success\">Updation Successful!!</Alert>)\n                break;\n            case \"FAILED\":\n                updateStatuspopupMsg = (<Alert variant=\"danger\">Updation Failed!!</Alert>)\n                break;\n            default:\n                updateStatuspopupMsg = null;\n        }\n\n        let deletePopupMsg = null;\n        switch (this.state.deleteResponseMsg) {\n            case \"SECTION_DELETED_SUCCESSFULLY\":\n                deletePopupMsg = (<Alert variant=\"success\">Section Deleted Successfully!!</Alert>)\n                break;\n            case \"DELETION_FAILED\":\n                deletePopupMsg = (<Alert variant=\"danger\">Deletion failed!!</Alert>)\n                break;\n            case \"SECTION_DOES_NOT_EXIST\":\n                deletePopupMsg = (<Alert variant=\"warning\">Section doesn't Exist!!</Alert>)\n                break;\n            default:\n                deletePopupMsg = null;\n        }\n\n\n        let redirectvar = null;\n        if (!localStorage.getItem('token')) {\n            redirectvar = <Redirect to=\"/login\" />\n        }\n\n        if (this.state.updateFlag) {\n            updateComponent = (\n                <div>\n                    <Card style={{ width: '24rem' }}>\n                        <Card.Body>\n                            <Card.Title>Update Section</Card.Title>\n                            <Card.Text>\n                                <form onSubmit={this.onUpdateSubmit}>\n                                    <div class=\"form-group\">\n                                        <label for=\"exampleInputEmail1\">Section name</label>\n                                        <input type=\"text\"\n                                            class=\"form-control\"\n                                            onChange={this.onChangeHandler}\n                                            name=\"dynamic_menu_section_name\"\n                                            required={true}\n                                            placeholder=\"Add new Sections here..\"\n                                            defaultValue={this.state.dynamic_menu_section_name}\n                                        />\n                                    </div>\n                                    {updateStatuspopupMsg}\n                                    <button type=\"submit\" class=\"btn btn-primary\">Update</button>\n                                </form>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n            )\n        }\n\n\n\n        return (\n            <div>\n                {redirectvar}\n                <Navbar />\n                <Container fluid={true}>\n                    <br /><br />\n                    <Link to=\"/updatemenu\"><Button variant=\"link\">Update Menu</Button></Link>\n                    <br /><br />\n\n                    <Row>\n                        <Col>\n                            <Card style={{ width: '24rem' }}>\n                                <Card.Body>\n                                    <Card.Title>Add Section</Card.Title>\n                                    <Card.Text>\n                                        <form onSubmit={this.onAddSubmit}>\n                                            <div class=\"form-group\">\n                                                <label for=\"exampleInputEmail1\">Section name</label>\n                                                <input type=\"text\"\n                                                    class=\"form-control\"\n                                                    onChange={this.onChangeHandler}\n                                                    name=\"addSectionName\"\n                                                    required={true}\n                                                    placeholder=\"Add new Sections here..\"\n                                                />\n                                            </div>\n                                            {popupMsg}\n                                            <button type=\"submit\" class=\"btn btn-primary\">Add</button>\n                                        </form>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                        <Col>\n                            <Card style={{ width: '24rem' }}>\n                                <Card.Body>\n                                    <Card.Title>Update Search</Card.Title>\n                                    <Card.Text>\n                                        <form onSubmit={this.onEditGet}>\n                                            <div class=\"form-group\">\n                                                <label for=\"exampleInputEmail1\">Section name</label>\n                                                <input type=\"text\"\n                                                    class=\"form-control\"\n                                                    onChange={this.onChangeHandlerForEdit}\n                                                    name=\"editSectionName\"\n                                                    required={true}\n                                                    placeholder=\"Edit Sections here..\"\n                                                />\n                                            </div>\n                                            {editGetpopupMsg}\n                                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>\n                                        </form>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                        <Col>\n                            <Card style={{ width: '24rem' }}>\n                                <Card.Body>\n                                    <Card.Title>Delete Section</Card.Title>\n                                    <Card.Text>\n                                        <form onSubmit={this.onDeleteSubmit}>\n                                            <div class=\"form-group\">\n                                                <label for=\"exampleInputEmail1\">Section name</label>\n                                                <input type=\"text\"\n                                                    class=\"form-control\"\n                                                    name=\"deleteSectionName\"\n                                                    onChange={this.onChangeHandler}\n                                                    required={true}\n                                                    placeholder=\"Sections to be deleted..\"\n                                                />\n                                            </div>\n                                            {deletePopupMsg}\n                                            <button type=\"submit\" class=\"btn btn-primary\">Delete</button>\n                                        </form>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                    <br /><br />\n                    <Row>\n                        <Col></Col>\n                        <Col>{updateComponent}</Col>\n                        <Col></Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\nexport default Sections\n"]},"metadata":{},"sourceType":"module"}