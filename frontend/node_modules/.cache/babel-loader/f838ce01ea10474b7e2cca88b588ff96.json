{"ast":null,"code":"var _jsxFileName = \"/Users/sachinkarve/Documents/GitHub/Lab1-014153425/frontend/react-frontend/src/components/OwnerHome.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport Navbar from './Navbar.js';\nimport cookie from 'react-cookies';\nimport { Link } from 'react-router-dom';\nimport { Container, Card, Form, Row, Col, Button, Alert } from \"react-bootstrap\";\nimport URL from '../config';\n\nclass OwnerHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchPendingOrders = () => {\n      axios.get(\"\".concat(URL, \"/orders/pendingorders/restaurant/\").concat(localStorage.getItem(\"user_id\"))).then(response => {\n        if (response.data[0]) {\n          this.setState({\n            pending_orders: response.data\n          });\n        }\n      }).catch(err => {\n        if (err.response && err.response.data) {\n          this.setState({\n            message: err.response.data\n          });\n        }\n      });\n    };\n\n    this.onOrderStatusChange = e => {\n      e.preventDefault();\n      let order_id = parseInt(e.target.name);\n      let orders = this.state.pending_orders;\n      let index = orders.findIndex(order => order.order_id === order_id);\n      let newStatus = e.target.value;\n      orders[index].order_status = newStatus;\n      let data = {\n        order_status: newStatus,\n        order_id: order_id\n      };\n      axios.post(\"\".concat(URL, \"/orders/orderstatus\"), data).then(response => {\n        if (response.data === \"STATUS_UPDATED\") {\n          this.setState({\n            pending_orders: orders,\n            message: response.data\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.fetchPendingOrders();\n    this.onOrderStatusChange = this.onOrderStatusChange.bind(this);\n  }\n\n  render() {\n    let redirectvar = null;\n    let orders = [];\n    let orderCards = null;\n    let message = null;\n    let statusDropdown;\n    let statusOptions;\n    let statuses = [\"ORDER_PLACED\", \"ORDER_CONFIRMED\", \"PREPARING\", \"OUT_FOR_DELIVERY\", \"DELIVERED\", \"ORDER_DECLINED\"];\n\n    if (!cookie.load('cookie')) {\n      redirectvar = React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n    }\n\n    if (this.state && this.state.message === \"NO_PENDING_ORDERS\") {\n      message = React.createElement(Alert, {\n        variant: \"warning\",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"No orders Pending for your Restaurant\");\n    } else if (this.state && this.state.message === \"STATUS_UPDATED\") {\n      message = React.createElement(Alert, {\n        style: {\n          width: \"20%\"\n        },\n        variant: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Status Updated\");\n    }\n\n    let loc = Location.pathname;\n\n    if (this.state && this.state.pending_orders) {\n      orders = this.state.pending_orders;\n\n      if (orders.length > 0) {\n        orderCards = orders.map(order => {\n          statusOptions = statuses.map(status => {\n            if (status === order.order_status) {\n              return React.createElement(\"option\", {\n                selected: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 106\n                },\n                __self: this\n              }, status);\n            }\n\n            return React.createElement(\"option\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108\n              },\n              __self: this\n            }, status);\n          });\n          statusDropdown = React.createElement(Form.Control, {\n            as: \"select\",\n            style: {\n              width: \"90%\"\n            },\n            name: order.order_id,\n            onChange: this.onOrderStatusChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, statusOptions);\n          return React.createElement(Card, {\n            bg: \"light\",\n            style: {\n              width: \"60rem\",\n              margin: \"4%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, React.createElement(Card.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, React.createElement(Col, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, React.createElement(Card.Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, order.name), React.createElement(Card.Subtitle, {\n            className: \"mb-2 text-muted\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, order.address), React.createElement(Card.Subtitle, {\n            className: \"mb-2 text-muted\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, order.phone_number), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }), React.createElement(Card.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, order.order_date)), React.createElement(Col, {\n            align: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }), React.createElement(Link, {\n            to: {\n              pathname: \"/orders/details\",\n              state: {\n                order_details: order,\n                prevPath: \"/home\"\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(Button, {\n            variant: \"link\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, \"Order Details\"))), React.createElement(Col, {\n            align: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }), statusDropdown, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          })))));\n        });\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"justify-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Awaiting Orders\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), message, orderCards));\n  }\n\n}\n\nexport default OwnerHome;","map":{"version":3,"sources":["/Users/sachinkarve/Documents/GitHub/Lab1-014153425/frontend/react-frontend/src/components/OwnerHome.js"],"names":["React","Component","axios","Redirect","Navbar","cookie","Link","Container","Card","Form","Row","Col","Button","Alert","URL","OwnerHome","constructor","props","fetchPendingOrders","get","localStorage","getItem","then","response","data","setState","pending_orders","catch","err","message","onOrderStatusChange","e","preventDefault","order_id","parseInt","target","name","orders","state","index","findIndex","order","newStatus","value","order_status","post","error","console","log","bind","render","redirectvar","orderCards","statusDropdown","statusOptions","statuses","load","width","loc","Location","pathname","length","map","status","margin","address","phone_number","order_date","order_details","prevPath"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport Navbar from './Navbar.js';\nimport cookie from 'react-cookies';\nimport { Link } from 'react-router-dom'\nimport {  Container,Card, Form, Row, Col,Button, Alert } from \"react-bootstrap\";\nimport URL from '../config'\n\nclass OwnerHome extends Component {\n    constructor(props) {\n        super(props);\n        this.fetchPendingOrders();\n        this.onOrderStatusChange = this.onOrderStatusChange.bind(this);\n    }\n\n\n\n\n    fetchPendingOrders = () => {\n        \n        axios.get(`${URL}/orders/pendingorders/restaurant/${localStorage.getItem(\"user_id\")}`)\n            .then(response => {\n                if (response.data[0]) {\n                    this.setState({\n                        pending_orders: response.data\n                    });\n                }\n            })\n            .catch(err => {\n                if (err.response && err.response.data) {\n                    this.setState({\n                        message: err.response.data\n                    });\n                }\n            });\n    };\n\n    \n\n\n    onOrderStatusChange = (e) => {\n        e.preventDefault();\n        let order_id = parseInt(e.target.name);\n        let orders = this.state.pending_orders;\n        let index = orders.findIndex((order => order.order_id === order_id));\n        let newStatus = e.target.value;\n\n        orders[index].order_status = newStatus;\n\n\n\n        let data = {\n            order_status: newStatus,\n            order_id: order_id\n        };\n\n        axios.post(`${URL}/orders/orderstatus`, data)\n            .then(response => {\n                if (response.data === \"STATUS_UPDATED\") {\n                    this.setState({\n                        pending_orders: orders,\n                        message: response.data\n                    });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    };\n\n    render() {\n\n\n        let redirectvar = null;\n        let orders = [];\n        let orderCards = null;\n        let message = null;\n        let statusDropdown;\n        let statusOptions;\n        let statuses = [\"ORDER_PLACED\", \"ORDER_CONFIRMED\", \"PREPARING\", \"OUT_FOR_DELIVERY\", \"DELIVERED\", \"ORDER_DECLINED\"];\n\n        if (!cookie.load('cookie')) {\n            redirectvar = <Redirect to=\"/\" />\n        }\n\n\n        if (this.state && this.state.message === \"NO_PENDING_ORDERS\") {\n            message = (\n                <Alert variant=\"warning\" style={{ width: \"40%\" }} >No orders Pending for your Restaurant</Alert>\n            );\n        }\n        else if (this.state && this.state.message === \"STATUS_UPDATED\") {\n            message = (\n                <Alert style={{width:\"20%\"}} variant=\"success\">Status Updated</Alert>\n            );\n        }\n        let loc = Location.pathname;\n       \n        if (this.state && this.state.pending_orders) {\n            orders = this.state.pending_orders;\n            if (orders.length > 0) {\n                orderCards = orders.map(order => {\n                    statusOptions = statuses.map(status => {\n                        if (status === order.order_status) {\n                            return <option selected>{status}</option>;\n                        }\n                        return <option>{status}</option>;\n                    });\n                    statusDropdown = (\n                        <Form.Control as=\"select\" style={{ width: \"90%\" }} name={order.order_id} onChange={this.onOrderStatusChange}>\n                            {statusOptions}\n                        </Form.Control>\n                    );\n                    return (\n                        <Card bg=\"light\" style={{ width: \"60rem\", margin: \"4%\" }}>\n                            <Card.Body>\n                                <Row>\n                                    <Col>\n                                        <Card.Title>{order.name}</Card.Title>\n                                        <Card.Subtitle className=\"mb-2 text-muted\">{order.address}</Card.Subtitle>\n                                        <Card.Subtitle className=\"mb-2 text-muted\">{order.phone_number}</Card.Subtitle>\n                                        <br />\n                                        <Card.Text>{order.order_date}</Card.Text>\n                                    </Col>\n                                    <Col align=\"center\">\n                                    <br/><br/>\n                                        <Link to={{ pathname: \"/orders/details\", state: {order_details: order, prevPath: \"/home\"} }}>\n                                            <Button variant=\"link\">Order Details</Button>\n                                        </Link>\n                                    </Col>\n                                    <Col align=\"center\">\n                                        <br />\n                                        <br />\n                                        {statusDropdown}\n                                        <br />\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Card>\n                    );\n                });\n            }\n        }\n        return (\n            <div><Navbar/>\n                <Container className=\"justify-content\">\n                    <br/>\n                    <h2>Awaiting Orders</h2>\n                    <br/>\n                    {message}\n                    {orderCards}\n                </Container>\n            </div>\n        )\n    }\n}\nexport default OwnerHome;"]},"metadata":{},"sourceType":"module"}